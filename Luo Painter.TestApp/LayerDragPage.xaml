<Page
    x:Class="Luo_Painter.TestApp.LayerDragPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:elements="using:Luo_Painter.Elements"
    xmlns:layers="using:Luo_Painter.Layers"
    xmlns:local="using:Luo_Painter.TestApp"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    >


    <FrameworkElement.Resources>
        <!--StaticResource-->
        <!--Disabled is Hidden-->
        <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent"/>
        <SolidColorBrush x:Key="ButtonBorderBrushDisabled" Color="Transparent"/>
        <SolidColorBrush x:Key="ButtonForegroundDisabled" Color="Transparent"/>
    </FrameworkElement.Resources>

    
    <Grid>

        <ListView      
            x:Name="ListView"
            SelectedIndex="0"
            SelectionMode="Extended"   
            IsItemClickEnabled="True"
                       
            AllowDrop="True" 
            CanDragItems="True"
            CanReorderItems="True" 
            ReorderMode="Enabled"   
        
            ScrollViewer.VerticalScrollBarVisibility="Hidden"
            ItemsSource="{x:Bind ObservableCollection}"
            >
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsStackPanel VerticalAlignment="Top"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Padding" Value="12,2"/>
                    <Setter Property="Transitions">
                        <Setter.Value>
                            <TransitionCollection>

                            </TransitionCollection>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ItemsControl.ItemContainerStyle>
            <ItemsControl.ItemTemplate>
                <DataTemplate x:DataType="layers:ILayer">
                    <elements:SelectedSwiper IsExist="{x:Bind IsExist, Mode=OneWay}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" elements:FrameworkElementExtensions.Depth="{x:Bind Depth, Mode=OneWay}" />
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="2" Margin="2,0" VerticalAlignment="Center" 
                                       elements:FrameworkElementExtensions.Visible="{x:Bind Visibility, Mode=OneWay}" >
                                <Run Text="{x:Bind Id, Mode=OneWay}" />
                            </TextBlock>
                            <Border Grid.Column="1" Width="40" Height="40" BorderThickness="1" BorderBrush="Black" Background="White"        
                                    elements:FrameworkElementExtensions.Visible="{x:Bind Visibility, Mode=OneWay}" >
                            </Border>
                            <Button Grid.Column="3" Padding="2" Width="36" Height="36" Command="{x:Bind}">
                                <FontIcon Glyph="&#xE228;" FontSize="16" FontWeight="Normal" FontFamily="{ThemeResource SymbolThemeFontFamily}" >

                                    <UIElement.RenderTransformOrigin>
                                        0.5,0.5
                                    </UIElement.RenderTransformOrigin>
                                    <UIElement.RenderTransform>
                                        <RotateTransform elements:FrameworkElementExtensions.IsExpand="{x:Bind IsExpand, Mode=OneWay}" />
                                    </UIElement.RenderTransform>

                                </FontIcon>
                            </Button>
                            <local:VisibilityButton Grid.Column="5" Padding="2" Width="36" Height="36" >
                                <FontIcon Glyph="&#xE7B3;" FontSize="22" FontWeight="Normal" FontFamily="{ThemeResource SymbolThemeFontFamily}"  
                                          Visibility="{x:Bind Visibility, Mode=TwoWay}"  />
                            </local:VisibilityButton>
                        </Grid>
                    </elements:SelectedSwiper>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemContainerTransitions>
                <TransitionCollection>

                </TransitionCollection>
            </ItemsControl.ItemContainerTransitions>
        </ListView>

        <CommandBar Margin="12" HorizontalAlignment="Center" VerticalAlignment="Bottom" >

            <AppBarButton x:Name="AddButton" >
                <UIElement.KeyboardAccelerators>
                    <KeyboardAccelerator Modifiers="None" Key="Insert"/>
                </UIElement.KeyboardAccelerators>
                <AppBarButton.Icon>
                    <SymbolIcon Symbol="Add"/>
                </AppBarButton.Icon>
                <AppBarButton.Label>
                    Add
                </AppBarButton.Label>
            </AppBarButton>

            <AppBarButton x:Name="RemoveButton" >
                <UIElement.KeyboardAccelerators>
                    <KeyboardAccelerator Modifiers="None" Key="Delete"/>
                </UIElement.KeyboardAccelerators>
                <AppBarButton.Icon>
                    <SymbolIcon Symbol="Delete"/>
                </AppBarButton.Icon>
                <AppBarButton.Label>
                    Remove
                </AppBarButton.Label>
            </AppBarButton>

            <AppBarButton x:Name="GroupButton" >
                <UIElement.KeyboardAccelerators>
                    <KeyboardAccelerator Modifiers="None" Key="G"/>
                </UIElement.KeyboardAccelerators>
                <AppBarButton.Icon>
                    <SymbolIcon Symbol="Globe"/>
                </AppBarButton.Icon>
                <AppBarButton.Label>
                    Group
                </AppBarButton.Label>
            </AppBarButton>

            <AppBarButton x:Name="UndoButton" IsEnabled="False">
                <UIElement.KeyboardAccelerators>
                    <KeyboardAccelerator Modifiers="Control" Key="Z"/>
                </UIElement.KeyboardAccelerators>
                <AppBarButton.Icon>
                    <SymbolIcon Symbol="Undo"/>
                </AppBarButton.Icon>
                <AppBarButton.Label>
                    Undo
                </AppBarButton.Label>
            </AppBarButton>

            <AppBarButton x:Name="RedoButton" IsEnabled="False">
                <UIElement.KeyboardAccelerators>
                    <KeyboardAccelerator Modifiers="Control" Key="Y"/>
                </UIElement.KeyboardAccelerators>
                <AppBarButton.Icon>
                    <SymbolIcon Symbol="Redo"/>
                </AppBarButton.Icon>
                <AppBarButton.Label>
                    Redo
                </AppBarButton.Label>
            </AppBarButton>

        </CommandBar>
    </Grid>

</Page>