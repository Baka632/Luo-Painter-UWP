<UserControl
    x:Class="Luo_Painter.Blends.TagTypeSegmented"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Height="40"
    Margin="4,0"
    d:DesignHeight="50"
    d:DesignWidth="200"
    >

    <FrameworkElement.Resources>
        <!--Style-->
        <Style TargetType="Button">
            <Setter Property="Foreground" Value="{ThemeResource RadioButtonBackgroundThemeBrush}" />
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="MinWidth" Value="30" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ButtonBase">
                        <Grid Background="Transparent">

                            <!--VisualState-->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />

                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="CheckOuterEllipse" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="CheckOuterEllipse" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="OuterEllipse" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                        </Storyboard>
                                    </VisualState>

                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Ellipse x:Name="OuterEllipse" Width="26" Height="26" Opacity="0" UseLayoutRounding="False" StrokeThickness="1" Stroke="{TemplateBinding Foreground}" />
                            <Ellipse x:Name="CheckOuterEllipse" Width="26" Height="26" Opacity="0" UseLayoutRounding="False" StrokeThickness="1" Stroke="{TemplateBinding Foreground}" />
                            <Ellipse x:Name="CheckGlyph" Width="16" Height="16" UseLayoutRounding="False" StrokeThickness="1" Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" />

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </FrameworkElement.Resources>

    <StackPanel x:Name="StackPanel" Orientation="Horizontal">
        <Button x:Name="None" Background="{ThemeResource RadioButtonBackgroundThemeBrush}" IsEnabled="{x:Bind NoneConverter(Type), Mode=OneWay}"/>
        <Button x:Name="Red" Background="LightCoral" IsEnabled="{x:Bind RedConverter(Type), Mode=OneWay}"/>
        <Button x:Name="Orange" Background="Orange" IsEnabled="{x:Bind OrangeConverter(Type), Mode=OneWay}"/>
        <Button x:Name="Yellow" Background="Yellow" IsEnabled="{x:Bind YellowConverter(Type), Mode=OneWay}"/>
        <Button x:Name="Green" Background="YellowGreen" IsEnabled="{x:Bind GreenConverter(Type), Mode=OneWay}"/>
        <Button x:Name="Blue" Background="SkyBlue" IsEnabled="{x:Bind BlueConverter(Type), Mode=OneWay}"/>
        <Button x:Name="Purple" Background="Plum" IsEnabled="{x:Bind PurpleConverter(Type), Mode=OneWay}"/>
    </StackPanel>

</UserControl>