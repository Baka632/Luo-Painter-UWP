<UserControl
    x:Class="Luo_Painter.Controls.PaintScrollViewer"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Windows10version1903="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 8)"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:luo_painter="using:Luo_Painter"
    xmlns:brushes="using:Luo_Painter.Brushes"
    xmlns:elements="using:Luo_Painter.Elements"
    xmlns:hsvColorPickers="using:Luo_Painter.HSVColorPickers"
    xmlns:effects="using:Microsoft.Graphics.Canvas.Effects"
    xmlns:canvas="using:Microsoft.Graphics.Canvas.UI.Xaml"
    mc:Ignorable="d"
    >

    <FrameworkElement.Resources>
        <!--Range-->
        <luo_painter:SizeRange x:Name="SizeRange"/>
        <luo_painter:SpacingRange x:Name="SpacingRange"/>
        <!--Flyout-->
        <Flyout x:Name="NumberFlyout" Placement="LeftEdgeAlignedTop" Windows10version1903:ShouldConstrainToRootBounds="False" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
            <hsvColorPickers:NumberPicker x:Name="NumberPicker" />
        </Flyout>
    </FrameworkElement.Resources>

    <StackPanel>

        <!--Ink-->
        <Border Margin="0,0,0,4" CornerRadius="8" BorderThickness="1" BorderBrush="{ThemeResource AppBorderBrush}" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
            <canvas:CanvasControl               
                x:Name="InkCanvasControl"       
                HorizontalAlignment="Center"
                Width="240"                           
                Height="120"                            
                UseSharedDevice="True"                               
                CustomDevice="{x:Bind CanvasDevice}"                       
                Opacity="{x:Bind PercentageConverter(OpacitySlider.Value), Mode=OneWay}"              
                />
        </Border>

        <!--Type-->
        <TextBlock x:Name="TypeTextBlock" Margin="2,4" Foreground="{ThemeResource AppForeground}" Style="{StaticResource BaseTextBlockStyle}">
                Type
        </TextBlock>

        <ComboBox x:Name="ComboBox" SelectedIndex="2" HorizontalAlignment="Stretch">

            <ItemsControl.ItemTemplate>
                <DataTemplate x:DataType="brushes:InkType">
                    <luo_painter:InkItem Type="{x:Bind}"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>

            <ItemsControl.ItemsSource>
                <luo_painter:InkList x:Name="InkCollection">
                    <brushes:InkType>Erase</brushes:InkType>
                    <brushes:InkType>General</brushes:InkType>
                    <brushes:InkType>Tip</brushes:InkType>
                    <brushes:InkType>Line</brushes:InkType>
                    <brushes:InkType>Blur</brushes:InkType>
                    <brushes:InkType>Mosaic</brushes:InkType>
                    <brushes:InkType>Liquefy</brushes:InkType>
                </luo_painter:InkList>
            </ItemsControl.ItemsSource>

        </ComboBox>

        <!--Property-->
        <TextBlock x:Name="PropertyTextBlock" Margin="2,4" Foreground="{ThemeResource AppForeground}" Style="{StaticResource BaseTextBlockStyle}">
            Property
        </TextBlock>

        <Border CornerRadius="8" Margin="0,4,0,4" BorderThickness="1" BorderBrush="{ThemeResource AppStroke}" Background="{ThemeResource SystemAltLowColor}">
            <StackPanel Margin="2">

                <!--Size-->
                <hsvColorPickers:NumberSlider2
                    x:Name="SizeSlider" 
                    SmallChange="1000" 
                    StepFrequency="1000" 
                    Number="{x:Bind SizeXToYConverter(SizeSlider.Value), Mode=OneWay}"
                    NumberMinimum="{x:Bind IntConverter(SizeRange.YRange.Minimum), Mode=OneWay}"
                    NumberMaximum="{x:Bind IntConverter(SizeRange.YRange.Maximum), Mode=OneWay}"
                    Decrease="True"
                    TickFrequency="25000" 
                    TickPlacement="Outside" 
                    >
                    <Slider.Header>
                        Size
                    </Slider.Header>
                </hsvColorPickers:NumberSlider2>

                <!--Opacity-->
                <hsvColorPickers:NumberSlider
                     x:Name="OpacitySlider"
                     Minimum="0"
                     Maximum="100"
                     Decrease="True" 
                     Unit="%"
                     TickFrequency="25" 
                     TickPlacement="Outside" 
                     >
                    <Slider.Header>
                        Opacity
                    </Slider.Header>
                </hsvColorPickers:NumberSlider>

                <!--Spacing-->
                <hsvColorPickers:NumberSlider2
                     x:Name="SpacingSlider"
                     SmallChange="10000" 
                     StepFrequency="10000"
                     Number="{x:Bind SpacingXToYConverter(SpacingSlider.Value), Mode=OneWay}"
                     NumberMinimum="{x:Bind IntConverter(SpacingRange.YRange.Minimum), Mode=OneWay}"
                     NumberMaximum="{x:Bind IntConverter(SpacingRange.YRange.Maximum), Mode=OneWay}"
                     Decrease="True" 
                     Unit="%"
                     TickFrequency="250000" 
                     TickPlacement="Outside" 
                     Foreground="{ThemeResource AppForeground}" 
                     Visibility="{x:Bind SpacingVisibilityConverter(Type), Mode=OneWay}" 
                     >
                    <Slider.Header>
                        Spacing
                    </Slider.Header>
                </hsvColorPickers:NumberSlider2>

                <!--Flow-->
                <hsvColorPickers:NumberSlider
                     x:Name="FlowSlider" 
                     Decrease="True" 
                     Unit="%" 
                     TickFrequency="25" 
                     TickPlacement="Outside" 
                     Foreground="{ThemeResource AppForeground}" 
                     Visibility="{x:Bind FlowVisibilityConverter(Type), Mode=OneWay}" 
                     >
                    <Slider.Header>
                        Flow
                    </Slider.Header>
                </hsvColorPickers:NumberSlider>

            </StackPanel>
        </Border>

        <MenuFlyoutSeparator Margin="0,4"/>

        <!--Hardness-->
        <TextBlock x:Name="HardnessTextBlock" Margin="2,4" Foreground="{ThemeResource AppForeground}" Style="{StaticResource BaseTextBlockStyle}"
                   Visibility="{x:Bind HardnessVisibilityConverter(Type), Mode=OneWay}">
            Hardness
        </TextBlock>

        <Grid ColumnSpacing="8" 
              Visibility="{x:Bind HardnessVisibilityConverter(Type), Mode=OneWay}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="136"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border CornerRadius="8" BorderThickness="1" BorderBrush="{ThemeResource AppBorderBrush}" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                <elements:IndexGrid Width="40" Height="30" HorizontalAlignment="Center" VerticalAlignment="Bottom"
                                    Index="{x:Bind HardnessListView.SelectedIndex,Mode=OneWay}">
                    <UIElement.RenderTransformOrigin>
                        0.5, 1
                    </UIElement.RenderTransformOrigin>
                    <UIElement.RenderTransform>
                        <ScaleTransform ScaleX="3" ScaleY="3"/>
                    </UIElement.RenderTransform>
                    <luo_painter:ElementIcon Type="BrushEdgeHardnessNone" Visibility="Visible"/>
                    <luo_painter:ElementIcon Type="BrushEdgeHardnessCosine" Visibility="Collapsed"/>
                    <luo_painter:ElementIcon Type="BrushEdgeHardnessQuadratic" Visibility="Collapsed"/>
                    <luo_painter:ElementIcon Type="BrushEdgeHardnessCube" Visibility="Collapsed"/>
                    <luo_painter:ElementIcon Type="BrushEdgeHardnessQuartic" Visibility="Collapsed"/>
                </elements:IndexGrid>
            </Border>
            <ListView x:Name="HardnessListView" Grid.Column="1" IsItemClickEnabled="True" Style="{StaticResource AppListViewStyle}">

                <ItemsControl.ItemTemplate>
                    <DataTemplate x:DataType="brushes:BrushEdgeHardness">
                        <luo_painter:HardnessIcon Type="{x:Bind}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

                <ItemsControl.ItemsSource>
                    <luo_painter:HardnessList x:Name="HardnessCollection">
                        <brushes:BrushEdgeHardness>None</brushes:BrushEdgeHardness>
                        <brushes:BrushEdgeHardness>Cosine</brushes:BrushEdgeHardness>
                        <brushes:BrushEdgeHardness>Quadratic</brushes:BrushEdgeHardness>
                        <brushes:BrushEdgeHardness>Cube</brushes:BrushEdgeHardness>
                        <brushes:BrushEdgeHardness>Quartic</brushes:BrushEdgeHardness>
                    </luo_painter:HardnessList>
                </ItemsControl.ItemsSource>

            </ListView>
        </Grid>

        <!--Tip-->
        <TextBlock x:Name="TipTextBlock" Margin="2,4" Foreground="{ThemeResource AppForeground}" Style="{StaticResource BaseTextBlockStyle}"
                   Visibility="{x:Bind TipVisibilityConverter(Type), Mode=OneWay}">
            Tip Shape
        </TextBlock>

        <Grid Height="136" ColumnSpacing="8"
              Visibility="{x:Bind TipVisibilityConverter(Type), Mode=OneWay}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="136"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border CornerRadius="8" BorderThickness="1" BorderBrush="{ThemeResource AppBorderBrush}" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                <Border 
                    Width="80"
                    Height="80" 
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Center" 
                    BorderThickness="1"
                    BorderBrush="{ThemeResource AppBarItemDisabledForegroundThemeBrush}" 
                    CornerRadius="{x:Bind CornerRadiusConverter(TipListBox.SelectedIndex), Mode=OneWay}"
                    >
                    <Border.Background>
                        <SolidColorBrush 
                            Color="{ThemeResource SystemBaseHighColor}" 
                            Opacity="{x:Bind TipOpacityConverter(TipListBox.SelectedIndex), Mode=OneWay}"
                            />
                    </Border.Background>
                </Border>
            </Border>
            <ListBox x:Name="TipListBox" Grid.Column="1" Style="{StaticResource AppGrid2x2ListBoxStyle}">
                <FontIcon Glyph="&#xEA3B;" FontSize="26" FontFamily="Segoe MDL2 Assets"/>
                <FontIcon Glyph="&#xEA3A;" FontSize="26" FontFamily="Segoe MDL2 Assets"/>
                <FontIcon Glyph="&#xE002;" FontSize="26" FontFamily="Segoe MDL2 Assets"/>
                <FontIcon Glyph="&#xE003;" FontSize="26" FontFamily="Segoe MDL2 Assets"/>
            </ListBox>
        </Grid>

        <!--Shape-->
        <TextBlock x:Name="ShapeTextBlock" Margin="2,4" Foreground="{ThemeResource AppForeground}" Style="{StaticResource BaseTextBlockStyle}"
                   Visibility="{x:Bind ShapeVisibilityConverter(Type), Mode=OneWay}">
            Shape
        </TextBlock>

        <Grid ColumnSpacing="8" RowSpacing="4"
              Visibility="{x:Bind ShapeVisibilityConverter(Type), Mode=OneWay}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="136"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>

            <Border Grid.RowSpan="3" CornerRadius="8" BorderThickness="1" BorderBrush="{ThemeResource AppBorderBrush}" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                <BitmapIcon x:Name="ShapeImage" ShowAsMonochrome="True">
                    <!--UriSource-->
                </BitmapIcon>
            </Border>

            <Button x:Name="ImportShapeButton" Grid.Column="1" CornerRadius="4" Height="40" BorderThickness="1" HorizontalAlignment="Stretch">
                Import...
            </Button>
            <ToggleButton x:Name="RecolorShapeButton" Grid.Column="1" Grid.Row="1" CornerRadius="4" Height="40" BorderThickness="1" HorizontalAlignment="Stretch">
                Recolor
            </ToggleButton>
            <Button x:Name="RemoveShapeButton" Grid.Column="1" Grid.Row="2" CornerRadius="4" Height="40" BorderThickness="1" HorizontalAlignment="Stretch">
                Remove
            </Button>

            <TextBlock x:Name="RotateTextBlock" Grid.Row="4" Margin="2,4" VerticalAlignment="Center" Foreground="{ThemeResource AppForeground}" Style="{StaticResource BaseTextBlockStyle}">
                Rotate Shape
            </TextBlock>
            <ToggleSwitch x:Name="RotateButton" Grid.Column="1" Grid.Row="3" />

        </Grid>


        <MenuFlyoutSeparator Margin="0,4" Visibility="{x:Bind GrainVisibilityConverter(Type), Mode=OneWay}" />


        <!--Grain-->
        <TextBlock x:Name="GrainTextBlock" Margin="2,4" Foreground="{ThemeResource AppForeground}" Style="{StaticResource BaseTextBlockStyle}"
                   Visibility="{x:Bind GrainVisibilityConverter(Type), Mode=OneWay}">
            Grain
        </TextBlock>

        <Grid ColumnSpacing="8" RowSpacing="4"
              Visibility="{x:Bind GrainVisibilityConverter(Type), Mode=OneWay}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="136"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>

            <Border Grid.RowSpan="3" CornerRadius="8" BorderThickness="1" BorderBrush="{ThemeResource AppBorderBrush}" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                <BitmapIcon x:Name="GrainImage" ShowAsMonochrome="True">
                    <!--UriSource-->
                </BitmapIcon>
            </Border>

            <Button x:Name="ImportGrainButton" Grid.Column="1" CornerRadius="4" Height="40" BorderThickness="1" HorizontalAlignment="Stretch">
                Import...
            </Button>
            <ToggleButton x:Name="RecolorGrainButton" Grid.Column="1" Grid.Row="1" CornerRadius="4" Height="40" BorderThickness="1" HorizontalAlignment="Stretch">
                Recolor
            </ToggleButton>
            <Button x:Name="RemoveGrainButton" Grid.Column="1" Grid.Row="2" CornerRadius="4" Height="40" BorderThickness="1" HorizontalAlignment="Stretch">
                Remove
            </Button>

            <TextBlock x:Name="StepTextBlock" Grid.Row="4" Margin="2,4" VerticalAlignment="Center" Foreground="{ThemeResource AppForeground}" Style="{StaticResource BaseTextBlockStyle}">
                Step of Grain
            </TextBlock>
            <hsvColorPickers:NumberButton x:Name="StepButton" Grid.Column="1" Grid.Row="3" Number="1024" NumberMinimum="16" NumberMaximum="16384" Margin="12,2" HorizontalAlignment="Right" >
                <!--Text-->
            </hsvColorPickers:NumberButton>

        </Grid>

        <!--BlendMode-->
        <TextBlock x:Name="BlendModeTextBlock" Margin="2,4" Foreground="{ThemeResource AppForeground}" Style="{StaticResource BaseTextBlockStyle}"
                   Visibility="{x:Bind BlendModeVisibilityConverter(Type), Mode=OneWay}">
            Blend Mode
        </TextBlock>

        <ListView x:Name="BlendModeListView" IsItemClickEnabled="True" Style="{StaticResource AppListViewStyle}"
                  Visibility="{x:Bind BlendModeVisibilityConverter(Type), Mode=OneWay}">

            <ItemsControl.ItemTemplate>
                <DataTemplate x:DataType="effects:BlendEffectMode">
                    <luo_painter:BlendItem Type="{x:Bind}"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>

            <ItemsControl.ItemsSource>
                <luo_painter:BlendList x:Name="BlendCollection">
                    <!--None-->
                    <effects:BlendEffectMode>-1</effects:BlendEffectMode>
                    <!--Darken-->
                    <effects:BlendEffectMode>Darken</effects:BlendEffectMode>
                    <effects:BlendEffectMode>Multiply</effects:BlendEffectMode>
                    <!--Lighten-->
                    <effects:BlendEffectMode>Lighten</effects:BlendEffectMode>
                    <effects:BlendEffectMode>Screen</effects:BlendEffectMode>
                    <effects:BlendEffectMode>LinearDodge</effects:BlendEffectMode>
                    <!--Contrast-->
                    <effects:BlendEffectMode>Overlay</effects:BlendEffectMode>
                    <!--Difference-->
                    <effects:BlendEffectMode>Difference</effects:BlendEffectMode>
                    <effects:BlendEffectMode>Subtract</effects:BlendEffectMode>
                </luo_painter:BlendList>
            </ItemsControl.ItemsSource>

        </ListView>


        <MenuFlyoutSeparator Margin="0,4" Visibility="{x:Bind MixColorVisibilityConverter(Type), Mode=OneWay}" />


        <!--MixColor-->
        <TextBlock x:Name="MixColorTextBlock" Margin="2,4" Foreground="{ThemeResource AppForeground}" Style="{StaticResource BaseTextBlockStyle}"
                   Visibility="{x:Bind MixColorVisibilityConverter(Type), Mode=OneWay}">
            Mix Color
        </TextBlock>

        <Grid Height="90" CornerRadius="8" BorderThickness="1" BorderBrush="{ThemeResource AppBorderBrush}" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
              Visibility="{x:Bind MixColorVisibilityConverter(Type), Mode=OneWay}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>

            <Border Grid.Row="1">
                <Border.Background>
                    <SolidColorBrush Color="{x:Bind PersistenceColor}"/>
                </Border.Background>
            </Border>
            <Border Grid.Column="1" Grid.Row="1">
                <Border.Background>
                    <SolidColorBrush Color="{x:Bind MixColor}"/>
                </Border.Background>
            </Border>

            <Path Grid.ColumnSpan="2" Grid.RowSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Path.Data>
                    M223.141,33.589L223.141,32.87C223.141,32.87 188.443,-0.243 152.758,0.001C152.077,-0.004 147.501,0.249 145.87,0.448C107.895,4.583 88.769,25.912 68.665,35.815C33.312,53.231 0,30.643 0,30.643L0,31.361C0,31.361 34.698,64.474 70.383,64.23C71.064,64.236 75.64,63.983 77.27,63.784C115.246,59.648 134.371,38.32 154.475,28.416C189.829,11.001 223.141,33.589 223.141,33.589Z
                </Path.Data>
                <Shape.Fill>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop 
                            x:Name="CapStop" 
                            Offset="{x:Bind CapOffsetConverter(WetSlider.Value), Mode=OneWay}" 
                            Color="{x:Bind BrushColor}"
                            />
                        <GradientStop 
                            x:Name="SegmentStop" 
                            Offset="{x:Bind SegmentOffsetConverter(WetSlider.Value), Mode=OneWay}" 
                            Color="{x:Bind BrushColor}"
                            />
                    </LinearGradientBrush>
                </Shape.Fill>
            </Path>
        </Grid>

        <Border CornerRadius="8" Margin="0,4,0,4" BorderThickness="1" BorderBrush="{ThemeResource AppStroke}" Background="{ThemeResource SystemAltLowColor}" 
                    Visibility="{x:Bind MixColorVisibilityConverter(Type), Mode=OneWay}">
            <StackPanel Margin="2">

                <hsvColorPickers:NumberSlider x:Name="MixSlider" Decrease="True" Unit="%" TickFrequency="25" TickPlacement="Outside" Foreground="{ThemeResource AppForeground}">
                    <Slider.Header>
                        Mix
                    </Slider.Header>
                </hsvColorPickers:NumberSlider>

                <hsvColorPickers:NumberSlider x:Name="WetSlider" Decrease="True" TickFrequency="2" TickPlacement="Outside" Foreground="{ThemeResource AppForeground}">
                    <Slider.Header>
                        Wet
                    </Slider.Header>
                </hsvColorPickers:NumberSlider>

                <hsvColorPickers:NumberSlider x:Name="PersistenceSlider" Decrease="True" Unit="%" TickFrequency="25" TickPlacement="Outside" Foreground="{ThemeResource AppForeground}">
                    <Slider.Header>
                        Persistence
                    </Slider.Header>
                </hsvColorPickers:NumberSlider>

            </StackPanel>
        </Border>


        <MenuFlyoutSeparator Margin="0,4"/>


        <!--IgnorePressure-->
        <TextBlock x:Name="IgnorePressureTextBlock" Margin="2,4" Foreground="{ThemeResource AppForeground}" Style="{StaticResource BaseTextBlockStyle}">
            Ignore Pressure
        </TextBlock>

        <Border Grid.Column="1" Height="40" Margin="0,2" CornerRadius="4" BorderThickness="1" BorderBrush="{ThemeResource AppStroke}" Background="{ThemeResource SystemAltLowColor}">
            <Grid ColumnSpacing="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="136"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock x:Name="SizeTextBlock" Margin="10,4" VerticalAlignment="Center" Foreground="{ThemeResource AppForeground}" Style="{StaticResource BaseTextBlockStyle}">
                    Size
                </TextBlock>
                <ToggleSwitch x:Name="IgnoreSizePressureButton" Grid.Column="1" />
            </Grid>
        </Border>

        <Border Grid.Column="1" Height="40" Margin="0,2" CornerRadius="4" BorderThickness="1" BorderBrush="{ThemeResource AppStroke}" Background="{ThemeResource SystemAltLowColor}" 
                    Visibility="{x:Bind FlowVisibilityConverter(Type), Mode=OneWay}">
            <Grid ColumnSpacing="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="136"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock x:Name="FlowTextBlock" Margin="10,4" VerticalAlignment="Center" Foreground="{ThemeResource AppForeground}" Style="{StaticResource BaseTextBlockStyle}">
                    Flow
                </TextBlock>
                <ToggleSwitch x:Name="IgnoreFlowPressureButton" Grid.Column="1" />
            </Grid>
        </Border>

        <ContentControl Height="4"/>

    </StackPanel>

</UserControl>