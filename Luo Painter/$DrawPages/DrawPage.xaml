<Page
    x:Class="Luo_Painter.DrawPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:transformers="using:FanKit.Transformers"
    xmlns:local="using:Luo_Painter"
    xmlns:controls="using:Luo_Painter.Controls"
    xmlns:elements="using:Luo_Painter.Elements"
    xmlns:layers="using:Luo_Painter.Layers"
    xmlns:menus="using:Luo_Painter.Menus"
    xmlns:tools="using:Luo_Painter.Tools"
    xmlns:canvas="using:Microsoft.Graphics.Canvas.UI.Xaml"
    NavigationCacheMode="Required"
    IsEnabled="False"
    mc:Ignorable="d" 
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    >


    <FrameworkElement.Resources>
        <!--Transformer-->
        <transformers:CanvasOperator x:Name="Operator" DestinationControl="{x:Bind Canvas}"/>
        <transformers:CanvasTransformer x:Name="Transformer" />
        <!--Extension-->
        <local:ApplicationBrushesExtension x:Name="ApplicationBrushes"/>
        <!--Range-->
        <local:SizeRange x:Name="SizeRange"/>
        <!--Command-->
        <local:OptionTypeCommand x:Name="Command"/>
    </FrameworkElement.Resources>


    <UIElement.KeyboardAccelerators>
        <KeyboardAccelerator>
            <!--Without it, All controls will show ToolTip for KeyboardAccelerator-->
        </KeyboardAccelerator>
        
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="S" CommandParameter="Save" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="Z" CommandParameter="Undo" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="Y" CommandParameter="Redo" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator x:Name="FullScreenKey" Modifiers="None" Key="Escape" CommandParameter="FullScreen" Command="{x:Bind Command}" />


        <local:OptionKeyboardAccelerator Modifiers="None" Key="F2" CommandParameter="AddMenuWithRename" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="None" Key="F3" CommandParameter="AddMenu" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="None" Key="F5" CommandParameter="PaintMenu" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="None" Key="F6" CommandParameter="BrushMenu" Command="{x:Bind Command}" />


        <local:OptionKeyboardAccelerator Key="Delete" CommandParameter="Remove" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Key="Insert" CommandParameter="AddLayer" Command="{x:Bind Command}" />

        <local:OptionKeyboardAccelerator Modifiers="Control" Key="X" CommandParameter="Cut" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="J" CommandParameter="Duplicate" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="C" CommandParameter="Copy" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="V" CommandParameter="Paste" Command="{x:Bind Command}" />

        <local:OptionKeyboardAccelerator Key="Back" CommandParameter="Clear" Command="{x:Bind Command}" />

        <local:OptionKeyboardAccelerator Modifiers="Control" Key="E" CommandParameter="Extract" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="M" CommandParameter="Merge" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="F" CommandParameter="Flatten" Command="{x:Bind Command}" />


        <local:OptionKeyboardAccelerator Modifiers="Control" Key="A" CommandParameter="All" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="D" CommandParameter="Deselect" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="I" CommandParameter="MarqueeInvert" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="P" CommandParameter="Pixel" Command="{x:Bind Command}" />


        <local:OptionKeyboardAccelerator Modifiers="Control" Key="R" CommandParameter="Group" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="U" CommandParameter="Ungroup" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="R" CommandParameter="Release" Command="{x:Bind Command}" />
    </UIElement.KeyboardAccelerators>


    <Grid>

        <!--VisualState-->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>

                <!--Phone-->
                <VisualState x:Name="Phone">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>

                        <!--Head-->
                        <Setter Target="ExportButton.Width" Value="60"/>

                        <Setter Target="ToolButton.Width" Value="60"/>
                        <Setter Target="EditButton.Width" Value="60"/>
                        <Setter Target="AdjustmentButton.Width" Value="60"/>
                        <Setter Target="OtherButton.Width" Value="60"/>
                        <Setter Target="PaintButton.Width" Value="60"/>
                        <Setter Target="BrushButton.Width" Value="60"/>
                        <Setter Target="SizeButton.Width" Value="60"/>
                        <Setter Target="HistoryButton.Width" Value="60"/>
                        <Setter Target="ColorButton.Width" Value="60"/>

                        <!--Expander-->
                        <Setter Target="ExpanderLightDismissOverlay.FullScreen" Value="True"/>
                        <Setter Target="ExportMenu.Height" Value="Auto"/>
                    </VisualState.Setters>
                </VisualState>

                <!--Pad-->
                <VisualState x:Name="Pad">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--Expander-->
                        <Setter Target="ExpanderLightDismissOverlay.FullScreen" Value="True"/>
                        <Setter Target="ExpanderLightDismissOverlay.Half" Value="True"/>
                        <Setter Target="ExportMenu.Height" Value="Auto"/>
                    </VisualState.Setters>
                </VisualState>

                <!--PC-->
                <VisualState x:Name="PC">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="900"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>

                <!--Hub-->
                <VisualState x:Name="Hub">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1200"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>


            </VisualStateGroup>
            <VisualStateGroup>

                <!--Normal-->
                <VisualState x:Name="UnFullScreen">
                    <VisualState.Setters>
                        <Setter Target="HeadTransform.Y" Value="0"/>
                    </VisualState.Setters>
                </VisualState>

                <!--FullScreen-->
                <VisualState x:Name="FullScreen">
                    <VisualState.Setters>
                        <Setter Target="ApplicationView.IsAccent" Value="True"/>

                        <Setter Target="HeadTransform.Y" Value="-50"/>

                        <Setter Target="UnFullScreenButton.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualStateGroup.Transitions>
                    <!--Show-->
                    <VisualTransition From="{x:Null}" To="Show" GeneratedDuration="0:0:0.2">
                        <VisualTransition.GeneratedEasingFunction>
                            <ExponentialEase Exponent="4.5" EasingMode="EaseOut"/>
                        </VisualTransition.GeneratedEasingFunction>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.15" By="{x:Null}" To="0" Storyboard.TargetProperty="Y" Storyboard.TargetName="HeadTransform" d:IsOptimized="True"/>
                        </Storyboard>
                    </VisualTransition>
                    <!--FullScreen-->
                    <VisualTransition From="{x:Null}" To="FullScreen" GeneratedDuration="0:0:0.2">
                        <VisualTransition.GeneratedEasingFunction>
                            <ExponentialEase Exponent="4.5" EasingMode="EaseOut"/>
                        </VisualTransition.GeneratedEasingFunction>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.1" By="{x:Null}" To="-50" Storyboard.TargetProperty="Y" Storyboard.TargetName="HeadTransform" d:IsOptimized="True"/>
                        </Storyboard>
                    </VisualTransition>
                </VisualStateGroup.Transitions>

            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>


        <!--Extension-->
        <elements:ApplicationTitleBarExtension x:Name="ApplicationView" TitleBarColor="{ThemeResource AppBackgroundColorMediumDark}" AccentTitleBarColor="{ThemeResource AppBackgroundColorDark}"/>


        <!--Canvas-->
        <Canvas x:Name="Canvas" FlowDirection="LeftToRight" Background="{ThemeResource AppBackgroundDark}" >
            <elements:AlignmentGridWithLines x:Name="AlignmentGrid" IsHitTestVisible="False" />
            <canvas:CanvasVirtualControl x:Name="CanvasVirtualControl" IsHitTestVisible="False" UseSharedDevice="True" CustomDevice="{x:Bind CanvasDevice}" />
            <canvas:CanvasAnimatedControl x:Name="CanvasAnimatedControl" IsHitTestVisible="False" TargetElapsedTime="0:0:0.05" UseSharedDevice="True" CustomDevice="{x:Bind CanvasDevice}" />
            <canvas:CanvasControl x:Name="CanvasControl" UseSharedDevice="True" CustomDevice="{x:Bind CanvasDevice}" />
        </Canvas>


        <!--Head-->
        <Button x:Name="UnFullScreenButton" Visibility="Collapsed" HorizontalAlignment="Right" VerticalAlignment="Top" Style="{StaticResource AppButtonStyle}">
            <SymbolIcon Symbol="BackToWindow"/>
        </Button>
        <Grid Height="50" HorizontalAlignment="Stretch" VerticalAlignment="Top" BorderThickness="0,0,0,1" BorderBrush="{ThemeResource AppStroke}" Background="{ThemeResource AppBackgroundMediumLight}">

            <UIElement.RenderTransformOrigin>
                0.5,0.5
            </UIElement.RenderTransformOrigin>
            <UIElement.RenderTransform>
                <TranslateTransform x:Name="HeadTransform" Y="0"/>
            </UIElement.RenderTransform>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Button x:Name="ExportButton" Padding="0" Foreground="Black" Background="#FFC003" Style="{StaticResource AppButtonStyle}">
                <SymbolIcon Symbol="NewWindow"/>
            </Button>

            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center" >
                <Button x:Name="HomeButton" MinWidth="44" Style="{StaticResource AppTextBlockButtonStyle}">
                    <SymbolIcon Symbol="Home"/>
                </Button>
                <Button x:Name="SaveButton" MinWidth="44" Style="{StaticResource AppTextBlockButtonStyle}">
                    <SymbolIcon Symbol="Save"/>
                </Button>
                <Button x:Name="UndoButton" IsEnabled="False" MinWidth="44" Style="{StaticResource AppTextBlockButtonStyle}">
                    <SymbolIcon Symbol="Undo"/>
                </Button>
                <Button x:Name="RedoButton" IsEnabled="False" MinWidth="44" Style="{StaticResource AppTextBlockButtonStyle}">
                    <SymbolIcon Symbol="Redo"/>
                </Button>
                <Button x:Name="KeyButton" MinWidth="44" Style="{StaticResource AppTextBlockButtonStyle}">
                    <SymbolIcon Symbol="Keyboard"/>
                </Button>
                <Button x:Name="FullScreenButton" MinWidth="44" Style="{StaticResource AppTextBlockButtonStyle}">
                    <SymbolIcon Symbol="FullScreen"/>
                </Button>
            </StackPanel>

            <StackPanel Grid.Column="3" Orientation="Horizontal" HorizontalAlignment="Center" >
                <Button x:Name="ToolButton" Style="{StaticResource AppButtonStyle}" >
                    <!--Icon-->
                    <ContentControl x:Name="ToolIcon">
                        <FrameworkElement.Resources>
                            <ResourceDictionary x:Name="ToolResource"/>
                        </FrameworkElement.Resources>
                    </ContentControl>
                </Button>
                <Button x:Name="PaintButton" Style="{StaticResource AppButtonStyle}" >
                    <local:ElementIcon Type="Paint"/>
                </Button>
                <Button x:Name="BrushButton" Style="{StaticResource AppButtonStyle}" >
                    <local:ElementIcon Type="Brush"/>
                </Button>
                <Button x:Name="SizeButton" Style="{StaticResource AppButtonStyle}" >
                    <local:ElementIcon Type="Size"/>
                </Button>
                <Button x:Name="HistoryButton" Style="{StaticResource AppButtonStyle}" >
                    <local:ElementIcon Type="History"/>
                </Button>
            </StackPanel>

            <Button x:Name="ColorButton" Grid.Column="4" Padding="0" Style="{StaticResource AppTextBlockButtonStyle}" 
                            ManipulationStarted="{x:Bind ColorMenu.ManipulationStarted2}"
                            ManipulationDelta="{x:Bind ColorMenu.ManipulationDelta2}"
                            ManipulationCompleted="{x:Bind ColorMenu.ManipulationCompleted2}"
                            >
                <UIElement.ManipulationMode>
                    TranslateX, TranslateY
                </UIElement.ManipulationMode>
                <Grid>
                    <FontIcon Glyph="&#xE91F;" FontSize="32" FontFamily="Segoe MDL2 Assets" />
                    <Ellipse Width="30" Height="30" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="White" />
                    <Ellipse Width="30" Height="30" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{x:Bind ColorMenu.Foreground}" />
                </Grid>
            </Button>

            <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Center" >
                <Button x:Name="EditButton" Style="{StaticResource AppButtonStyle}" >
                    <local:ElementIcon Type="Edit"/>
                </Button>
                <Button x:Name="AdjustmentButton" Style="{StaticResource AppButtonStyle}" >
                    <local:ElementIcon Type="Adjustment"/>
                </Button>
                <Button x:Name="OtherButton" Style="{StaticResource AppButtonStyle}" >
                    <local:ElementIcon Type="Other"/>
                </Button>
            </StackPanel>

        </Grid>


        <!--Foot-->
        <controls:ContextAppBar x:Name="AppBar" />


        <!--Tool-->
        <controls:ToolListView x:Name="ToolListView" />


        <!--Layer-->
        <controls:LayerListView x:Name="LayerListView" ItemsSource="{x:Bind ObservableCollection}" />


        <!--Simulate-->
        <controls:SimulateCanvas x:Name="SimulateCanvas" />


        <!--Expander-->
        <Rectangle x:Name="LightDismissOverlay" Visibility="Collapsed" Fill="Transparent"/>
        <elements:ExpanderLightDismissOverlay x:Name="ExpanderLightDismissOverlay" >
            <menus:ExportMenu x:Name="ExportMenu"/>
            <elements:Expander x:Name="ToolMenu" Title="Tool" MinWidth="320" BorderBrush="{ThemeResource AppStroke}" Background="{ThemeResource SystemControlAcrylicElementBrush}" >
                <local:OptionSwitchPresenter x:Name="ToolSwitchPresenter" >
                    <tools:ViewTool x:Name="ViewTool" />
                    <local:OptionCase Value="Brush">
                        <StackPanel Spacing="6">
                            <CheckBox x:Name="BrushOpaqueCheckBox" Margin="2,0">
                                Opaque
                            </CheckBox>
                            <CheckBox x:Name="BrushReverseCheckBox" Margin="2,0">
                                Reverse
                            </CheckBox>
                        </StackPanel>
                    </local:OptionCase>
                    <local:OptionCase Value="Transparency">
                        <CheckBox x:Name="TransparencyReverseCheckBox" Margin="2,0">
                            Reverse
                        </CheckBox>
                    </local:OptionCase>
                </local:OptionSwitchPresenter>
            </elements:Expander>
            <menus:BrushMenu x:Name="BrushMenu" />
            <menus:SizeMenu x:Name="SizeMenu" />
            <menus:EditMenu x:Name="EditMenu" />
            <menus:AdjustmentMenu x:Name="AdjustmentMenu" />
            <menus:OtherMenu x:Name="OtherMenu" />
            <menus:HistoryMenu x:Name="HistoryMenu" ItemsSource="{x:Bind History.Source}" />
            <menus:AddMenu x:Name="AddMenu"/>
            <menus:LayerMenu x:Name="LayerMenu"/>
            <menus:ColorMenu x:Name="ColorMenu" Eyedropper="{x:Bind Eyedropper}" ClickEyedropper="{x:Bind ClickEyedropper}" />
        </elements:ExpanderLightDismissOverlay>


        <!--Tip-->
        <Border IsHitTestVisible="False" CornerRadius="6" Padding="12,3" MinHeight="40" Background="Red" RequestedTheme="Dark" HorizontalAlignment="Center" VerticalAlignment="Center"
                Visibility="{x:Bind ReverseBooleanToVisibilityConverter(AppBar.Selector.IsHitTestVisible), Mode=OneWay}">
            <StackPanel Orientation="Horizontal">
                <SymbolIcon Symbol="Delete"/>
                <ContentControl Width="12"/>
                <TextBlock x:Name="GradientMappingTipTextBlock" FontWeight="Medium" VerticalAlignment="Center">
                    Drop to Remove
                </TextBlock>
            </StackPanel>
        </Border>


        <!--Dialog-->
        <ContentDialog x:Name="SettingDislog" Style="{StaticResource AppContentDialogStyle}">

            <ContentDialog.PrimaryButtonText>
                OK
            </ContentDialog.PrimaryButtonText>
            <ContentDialog.SecondaryButtonText>
                Cancel
            </ContentDialog.SecondaryButtonText>


        </ContentDialog>
        <controls:TextureDialog x:Name="TextureDialog" />
        <controls:StretchDialog x:Name="StretchDialog" />


        <!--Tip-->
        <controls:ToastTip x:Name="ToastTip" Visibility="Collapsed" IsHitTestVisible="False" />
        <controls:KeyboardShortcuts x:Name="KeyboardShortcuts" Visibility="Collapsed" />



        <elements:Eyedropper x:Name="Eyedropper" Visibility="Collapsed"/>
        <elements:ClickEyedropper x:Name="ClickEyedropper" Visibility="Collapsed"/>

        <ItemsControl IsHitTestVisible="False" HorizontalAlignment="Left" x:Name="ItemsControl" Width="320" Height="320" Background="DodgerBlue" Foreground="White">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsStackPanel ItemsUpdatingScrollMode="KeepLastItemInView" VerticalAlignment="Bottom"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>

    </Grid>
</Page>