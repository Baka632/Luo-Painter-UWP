<Page
    x:Class="Luo_Painter.DrawPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:transformers="using:FanKit.Transformers"
    xmlns:local="using:Luo_Painter"
    xmlns:blends="using:Luo_Painter.Blends"
    xmlns:brushes="using:Luo_Painter.Brushes"
    xmlns:controls="using:Luo_Painter.Controls"
    xmlns:elements="using:Luo_Painter.Elements"
    xmlns:effects="using:Microsoft.Graphics.Canvas.Effects"
    xmlns:canvas="using:Microsoft.Graphics.Canvas.UI.Xaml"
    NavigationCacheMode="Required"
    IsEnabled="False"
    mc:Ignorable="d" 
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    >


    <FrameworkElement.Resources>
        <!--Transformer-->
        <brushes:InkCanvasOperator x:Name="Operator" DestinationControl="{x:Bind CanvasControl}"/>
        <transformers:CanvasTransformer x:Name="Transformer" />
        <!--Extension-->
        <local:ApplicationBrushesExtension x:Name="ApplicationBrushes"/>
        <!--Range-->
        <local:SizeRange x:Name="SizeRange"/>
        <!--Command-->
        <local:OptionTypeCommand x:Name="Command"/>
        <!--Flyout-->
        <Flyout x:Name="AddFlyout" Placement="Bottom" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
            <StackPanel Spacing="2" Padding="6,4" Width="318">

                <TextBlock                        
                    x:Name="AddTextBlock"                            
                    Margin="8,4"                          
                    IsHitTestVisible="false"                           
                    FontWeight="Medium"                          
                    TextTrimming="CharacterEllipsis"                          
                    FontSize="20"                          
                    TextWrapping="Wrap"                          
                    VerticalAlignment="Center"                          
                    Style="{StaticResource SubheaderTextBlockStyle}"                       
                    >                        
                    Add
                </TextBlock>

                <local:OptionItemButton Type="AddLayer" Command="{x:Bind Command}" Style="{StaticResource AppBorderButtonStyle}" />
                <local:OptionItemButton Type="AddImageLayer" Command="{x:Bind Command}" Style="{StaticResource AppBorderButtonStyle}" />
                <local:OptionItemButton Type="AddCurveLayer" Command="{x:Bind Command}" Style="{StaticResource AppBorderButtonStyle}" />

            </StackPanel>
        </Flyout>
        <Flyout x:Name="PropertyFlyout" Placement="Bottom" FlyoutPresenterStyle="{StaticResource AppFlyoutPresenterStyle}">
            <StackPanel Spacing="2" Padding="6,4" Width="318">

                <TextBlock                        
                    x:Name="PropertyTextBlock"                            
                    Margin="8,4"                          
                    IsHitTestVisible="false"                           
                    FontWeight="Medium"                          
                    TextTrimming="CharacterEllipsis"                          
                    FontSize="20"                          
                    TextWrapping="Wrap"                          
                    VerticalAlignment="Center"                          
                    Style="{StaticResource SubheaderTextBlockStyle}"                       
                    >                        
                    Properties
                </TextBlock>
                <TextBlock                        
                    x:Name="PropertyCountTextBlock"                            
                    Margin="8,4"                          
                    IsHitTestVisible="false"                           
                    FontWeight="Medium"                          
                    TextTrimming="CharacterEllipsis"                          
                    FontSize="20"                          
                    TextWrapping="Wrap"                
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"            
                    Foreground="{ThemeResource SystemColorControlAccentBrush}"
                    Style="{StaticResource SubheaderTextBlockStyle}"                       
                    >                        
                    0
                </TextBlock>

                <!--Opacity-->
                <Border CornerRadius="8" BorderThickness="1" BorderBrush="{ThemeResource AppStroke}" Background="{ThemeResource SystemAltLowColor}" >
                    <Slider x:Name="OpacitySlider" Minimum="0" Maximum="100" Style="{StaticResource AppSliderStyle}" >
                        <FrameworkElement.Tag>
                            Opacity
                        </FrameworkElement.Tag>
                        <Slider.Header>
                            <Button                                    
                                Padding="4,0"                                   
                                MinWidth="44"                                    
                                Height="28"                                      
                                BorderThickness="1"                                       
                                BorderBrush="{ThemeResource AppStroke}"                                       
                                Background="{ThemeResource SystemAltLowColor}"                                     
                                >
                                <Button.Flyout>
                                    <Flyout>

                                    </Flyout>
                                </Button.Flyout>
                                <TextBlock>                                       
                                    <Run Text="{x:Bind OpacitySlider.Value, Mode=OneWay}" />                  
                                    <Run>%</Run>
                                </TextBlock>
                            </Button>
                        </Slider.Header>
                    </Slider>
                </Border>

                <!--BlendMode-->
                <TextBlock x:Name="BlendModeTextBlock" Margin="2,4" Foreground="{ThemeResource AppForeground}" Style="{StaticResource BaseTextBlockStyle}" >
                    Blend Mode
                </TextBlock>
                <ComboBox x:Name="BlendModeComboBox" >

                    <ItemsControl.ItemTemplate>
                        <DataTemplate x:DataType="effects:BlendEffectMode">
                            <local:BlendIcon Type="{x:Bind}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>

                    <ItemsControl.ItemsSource>
                        <local:BlendList x:Name="BlendCollection">
                            <!--None-->
                            <effects:BlendEffectMode>-1</effects:BlendEffectMode>
                            <effects:BlendEffectMode>Dissolve</effects:BlendEffectMode>
                            <!--Darken-->
                            <effects:BlendEffectMode>Darken</effects:BlendEffectMode>
                            <effects:BlendEffectMode>Multiply</effects:BlendEffectMode>
                            <effects:BlendEffectMode>ColorBurn</effects:BlendEffectMode>
                            <effects:BlendEffectMode>LinearBurn</effects:BlendEffectMode>
                            <effects:BlendEffectMode>DarkerColor</effects:BlendEffectMode>
                            <!--Lighten-->
                            <effects:BlendEffectMode>Lighten</effects:BlendEffectMode>
                            <effects:BlendEffectMode>Screen</effects:BlendEffectMode>
                            <effects:BlendEffectMode>ColorDodge</effects:BlendEffectMode>
                            <effects:BlendEffectMode>LinearDodge</effects:BlendEffectMode>
                            <effects:BlendEffectMode>LighterColor</effects:BlendEffectMode>
                            <!--Contrast-->
                            <effects:BlendEffectMode>Overlay</effects:BlendEffectMode>
                            <effects:BlendEffectMode>SoftLight</effects:BlendEffectMode>
                            <effects:BlendEffectMode>HardLight</effects:BlendEffectMode>
                            <effects:BlendEffectMode>VividLight</effects:BlendEffectMode>
                            <effects:BlendEffectMode>LinearLight</effects:BlendEffectMode>
                            <effects:BlendEffectMode>PinLight</effects:BlendEffectMode>
                            <effects:BlendEffectMode>HardMix</effects:BlendEffectMode>
                            <!--Difference-->
                            <effects:BlendEffectMode>Difference</effects:BlendEffectMode>
                            <effects:BlendEffectMode>Exclusion</effects:BlendEffectMode>
                            <effects:BlendEffectMode>Subtract</effects:BlendEffectMode>
                            <effects:BlendEffectMode>Division</effects:BlendEffectMode>
                            <!--Color-->
                            <effects:BlendEffectMode>Hue</effects:BlendEffectMode>
                            <effects:BlendEffectMode>Saturation</effects:BlendEffectMode>
                            <effects:BlendEffectMode>Color</effects:BlendEffectMode>
                            <effects:BlendEffectMode>Luminosity</effects:BlendEffectMode>
                        </local:BlendList>
                    </ItemsControl.ItemsSource>

                </ComboBox>

                <!--Name-->
                <TextBlock x:Name="NameTextBlock" Margin="2,4" Foreground="{ThemeResource AppForeground}" Style="{StaticResource BaseTextBlockStyle}" >
                    Name
                </TextBlock>
                <TextBox x:Name="NameTextBox" >
                    <TextBox.PlaceholderText>
                        Input Text...
                    </TextBox.PlaceholderText>
                </TextBox>

                <!--TagType-->
                <TextBlock x:Name="TagTypeTextBlock" Margin="2,4" Foreground="{ThemeResource AppForeground}" Style="{StaticResource BaseTextBlockStyle}" >
                    Tag Type
                </TextBlock>
                <Border CornerRadius="4" BorderThickness="1" BorderBrush="{ThemeResource AppStroke}" Background="{ThemeResource SystemAltLowColor}" >
                    <blends:TagTypeSegmented x:Name="TagTypeSegmented"/>
                </Border>

            </StackPanel>
        </Flyout>
    </FrameworkElement.Resources>


    <UIElement.KeyboardAccelerators>
        <KeyboardAccelerator>
            <!--Without it, All controls will show ToolTip for KeyboardAccelerator-->
        </KeyboardAccelerator>

        <local:OptionKeyboardAccelerator Modifiers="Control" Key="S" CommandParameter="Save" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="Z" CommandParameter="Undo" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="Y" CommandParameter="Redo" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator x:Name="FullScreenKey" Modifiers="None" Key="Escape" CommandParameter="FullScreen" Command="{x:Bind Command}" />


        <local:OptionKeyboardAccelerator Modifiers="None" Key="F2" CommandParameter="AddMenuWithRename" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="None" Key="F3" CommandParameter="AddMenu" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="None" Key="F5" CommandParameter="PaintMenu" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="None" Key="F6" CommandParameter="BrushMenu" Command="{x:Bind Command}" />


        <local:OptionKeyboardAccelerator Key="Delete" CommandParameter="Remove" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Key="Insert" CommandParameter="AddLayer" Command="{x:Bind Command}" />

        <local:OptionKeyboardAccelerator Modifiers="Control" Key="X" CommandParameter="Cut" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="J" CommandParameter="Duplicate" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="C" CommandParameter="Copy" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="V" CommandParameter="Paste" Command="{x:Bind Command}" />

        <local:OptionKeyboardAccelerator Key="Back" CommandParameter="Clear" Command="{x:Bind Command}" />

        <local:OptionKeyboardAccelerator Modifiers="Control" Key="E" CommandParameter="Extract" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="M" CommandParameter="Merge" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="F" CommandParameter="Flatten" Command="{x:Bind Command}" />


        <local:OptionKeyboardAccelerator Modifiers="Control" Key="A" CommandParameter="All" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="D" CommandParameter="Deselect" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="I" CommandParameter="MarqueeInvert" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="P" CommandParameter="Pixel" Command="{x:Bind Command}" />


        <local:OptionKeyboardAccelerator Modifiers="Control" Key="R" CommandParameter="Group" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="U" CommandParameter="Ungroup" Command="{x:Bind Command}" />
        <local:OptionKeyboardAccelerator Modifiers="Control" Key="R" CommandParameter="Release" Command="{x:Bind Command}" />
    </UIElement.KeyboardAccelerators>


    <Grid>

        <!--VisualState-->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>

                <!--FullScreen-->
                <VisualState x:Name="FullScreen">
                    <VisualState.Setters>
                        <!--Application-->
                        <Setter Target="ApplicationView.IsAccent" Value="True"/>

                        <Setter Target="FullScreenButton.Visibility" Value="Collapsed"/>
                        <Setter Target="UnFullScreenButton.Visibility" Value="Visible"/>

                        <!--Head-->
                        <Setter Target="LayerListView.Margin" Value="0"/>
                        <Setter Target="HeadScrollViewer.Visibility" Value="Collapsed"/>
                        <Setter Target="HeadButton.Visibility" Value="Visible"/>

                        <Setter Target="LeftSplitButton.Visibility" Value="Visible"/>
                        <Setter Target="RightSplitButton.Visibility" Value="Visible"/>

                        <!--SplitView-->
                        <Setter Target="RightSplitView.IsPaneOpen" Value="False"/>
                        <Setter Target="LeftSplitView.IsPaneOpen" Value="False"/>

                        <Setter Target="RightSplitView.DisplayMode" Value="Overlay"/>
                        <Setter Target="LeftSplitView.DisplayMode" Value="Overlay"/>
                    </VisualState.Setters>
                </VisualState>

                <!--Phone
                <VisualState x:Name="Phone">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                
                
                    </VisualState.Setters>
                </VisualState>-->

                <!--Pad
                <VisualState x:Name="Pad">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>-->

                <!--PC-->
                <VisualState x:Name="PC">
                    <VisualState.Setters>
                        <!--Head-->
                        <Setter Target="LayerListView.Margin" Value="0"/>
                        <Setter Target="HeadScrollViewer.Visibility" Value="Collapsed"/>
                        <Setter Target="HeadButton.Visibility" Value="Visible"/>

                        <Setter Target="LeftSplitButton.Visibility" Value="Visible"/>
                        <Setter Target="RightSplitButton.Visibility" Value="Visible"/>

                        <!--SplitView-->
                        <Setter Target="RightSplitView.IsPaneOpen" Value="False"/>
                        <Setter Target="LeftSplitView.IsPaneOpen" Value="False"/>

                        <Setter Target="RightSplitView.DisplayMode" Value="Overlay"/>
                        <Setter Target="LeftSplitView.DisplayMode" Value="Overlay"/>
                    </VisualState.Setters>
                </VisualState>

                <!--Hub-->
                <VisualState x:Name="Hub">
                    <VisualState.Setters>
                        <!--SplitView-->
                        <Setter Target="RightSplitView.IsPaneOpen" Value="True"/>
                        <Setter Target="LeftSplitView.IsPaneOpen" Value="True"/>
                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>


        <!--Extension-->
        <elements:ApplicationTitleBarExtension x:Name="ApplicationView" TitleBarColor="{ThemeResource AppBackgroundColorDark}" AccentTitleBarColor="{ThemeResource AppBackgroundColorDark}"/>


        <!--Body-->
        <SplitView 
            x:Name="RightSplitView"
            PanePlacement="Right"
            OpenPaneLength="280"
            IsPaneOpen="True"                    
            DisplayMode="Inline"
            PaneBackground="{ThemeResource SystemControlAcrylicWindowBrush}"
            >
            <SplitView.Pane>
                <Grid>

                    <!--Tool-->
                    <controls:ToolListView x:Name="ToolListView" Visibility="{x:Bind ToolItem.IsSelected, Mode=OneWay}"/>
                    <controls:PaintScrollViewer x:Name="PaintScrollViewer" Visibility="{x:Bind PaintItem.IsSelected, Mode=OneWay}"/>
                    <controls:BrushListView x:Name="BrushMenu" Visibility="{x:Bind BrushItem.IsSelected, Mode=OneWay}"/>
                    <controls:SizeListView x:Name="SizeMenu" Visibility="{x:Bind SizeItem.IsSelected, Mode=OneWay}"/>
                    <controls:HistoryListView x:Name="HistoryMenu" ItemsSource="{x:Bind History.Source}" Visibility="{x:Bind HistoryItem.IsSelected, Mode=OneWay}"/>

                    <!--Head-->
                    <ListBox x:Name="HeadComboBox" SelectedIndex="2" Height="50" VerticalAlignment="Top" BorderThickness="0,0,0,1" BorderBrush="{ThemeResource AppStroke}" Background="{ThemeResource AppBackgroundDark}">
                        <ListBoxItem x:Name="ToolItem" Width="70">
                            <SymbolIcon Symbol="ViewAll"/>
                        </ListBoxItem>
                        <ListBoxItem x:Name="PaintItem" Width="70">
                            <local:ElementIcon Type="Paint"/>
                        </ListBoxItem>
                        <ListBoxItem x:Name="BrushItem" Width="70">
                            <local:ElementIcon Type="Brush"/>
                        </ListBoxItem>
                        <ListBoxItem x:Name="SizeItem" Width="70">
                            <local:ElementIcon Type="Size"/>
                        </ListBoxItem>
                        <ListBoxItem x:Name="HistoryItem" Width="70">
                            <FontIcon Glyph="&#xF738;" FontSize="20" FontWeight="Bold" FontFamily="Segoe MDL2 Assets"/>
                        </ListBoxItem>
                    </ListBox>

                </Grid>
            </SplitView.Pane>
            <SplitView 
                x:Name="LeftSplitView"
                PanePlacement="Left"                     
                OpenPaneLength="280"                    
                IsPaneOpen="True"                    
                DisplayMode="Inline"                   
                PaneBackground="{ThemeResource SystemControlAcrylicWindowBrush}"                   
                >
                <SplitView.Pane>
                    <Grid>

                        <!--Layer-->
                        <controls:LayerListView x:Name="LayerListView" ItemsSource="{x:Bind ObservableCollection}" >
                            <controls:LayerListView.Header>
                                <controls:AddHeader x:Name="AddMenu"/>
                            </controls:LayerListView.Header>
                        </controls:LayerListView>

                        <!--Head-->
                        <ScrollViewer x:Name="HeadScrollViewer" Height="50" VerticalAlignment="Top" BorderThickness="0,0,0,1" BorderBrush="{ThemeResource AppStroke}" Background="{ThemeResource AppBackgroundDark}" Style="{StaticResource AppHorizontalScrollViewerStyle}">
                            <StackPanel Orientation="Horizontal">
                                <Button x:Name="HomeButton" MinWidth="44" Style="{StaticResource AppTextBlockButtonStyle}">
                                    <SymbolIcon Symbol="Home"/>
                                </Button>
                                <Button x:Name="UndoButton" IsEnabled="False" MinWidth="44" Style="{StaticResource AppTextBlockButtonStyle}">
                                    <SymbolIcon Symbol="Undo"/>
                                </Button>
                                <Button x:Name="RedoButton" IsEnabled="False" MinWidth="44" Style="{StaticResource AppTextBlockButtonStyle}">
                                    <SymbolIcon Symbol="Redo"/>
                                </Button>
                                <Button x:Name="SaveButton" MinWidth="44" Style="{StaticResource AppTextBlockButtonStyle}">
                                    <SymbolIcon Symbol="Save"/>
                                </Button>
                                <Button x:Name="KeyButton" MinWidth="44" Style="{StaticResource AppTextBlockButtonStyle}">
                                    <SymbolIcon Symbol="Keyboard"/>
                                </Button>
                            </StackPanel>
                        </ScrollViewer>

                    </Grid>
                </SplitView.Pane>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Canvas x:Name="Canvas" FlowDirection="LeftToRight" Grid.Row="1" Background="{ThemeResource AppBackgroundDark}" >
                        <!--AlignmentGrid-->
                        <elements:AlignmentGridWithSpot x:Name="AlignmentGrid" IsHitTestVisible="False" />

                        <!--Canvas-->
                        <canvas:CanvasVirtualControl x:Name="CanvasVirtualControl" IsHitTestVisible="False" UseSharedDevice="True" CustomDevice="{x:Bind CanvasDevice}" />
                        <canvas:CanvasAnimatedControl x:Name="CanvasAnimatedControl" IsHitTestVisible="False" TargetElapsedTime="0:0:0.05" UseSharedDevice="True" CustomDevice="{x:Bind CanvasDevice}" />
                        <canvas:CanvasControl x:Name="CanvasControl" UseSharedDevice="True" CustomDevice="{x:Bind CanvasDevice}" />

                        <!--Simulate-->
                        <controls:SimulateCanvas x:Name="SimulateCanvas" />
                    </Canvas>

                    <!--Split-->
                    <Button x:Name="LeftSplitButton" Grid.Row="1" Visibility="Collapsed" Width="24" Height="110" CornerRadius="0,6,6,0" HorizontalAlignment="Left" BorderThickness="0,1,1,1" BorderBrush="{ThemeResource AppStroke}" Background="{ThemeResource AppBackground}" >
                        <Line X1="0" X2="0" Y1="0" Y2="36" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeThickness="3" Stroke="{ThemeResource AppForeground}"/>
                    </Button>
                    <Button x:Name="RightSplitButton" Grid.Row="1" Visibility="Collapsed" Width="24" Height="110" CornerRadius="6,0,0,6" HorizontalAlignment="Right" BorderThickness="1,1,0,1" BorderBrush="{ThemeResource AppStroke}" Background="{ThemeResource AppBackground}" >
                        <Line X1="0" X2="0" Y1="0" Y2="36" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeThickness="3" Stroke="{ThemeResource AppForeground}"/>
                    </Button>

                    <!--Head-->
                    <Border x:Name="HeadGrid" BorderThickness="0,0,0,1" BorderBrush="{ThemeResource AppStroke}" Background="{ThemeResource AppBackgroundDark}">
                        <Grid MaxWidth="900" CornerRadius="6" BorderThickness="1,1,1,0" BorderBrush="{ThemeResource AppStroke}" Background="{ThemeResource AppBackground}" >

                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" >
                                <Button x:Name="HeadButton" Visibility="Collapsed" MinWidth="44" Style="{StaticResource AppTextBlockButtonStyle}">
                                    <Button.Flyout>
                                        <MenuFlyout>

                                            <MenuFlyoutItem x:Name="HomeButton2">
                                                <MenuFlyoutItem.Icon>
                                                    <SymbolIcon Symbol="Home" Foreground="{StaticResource AppBlueLinearGradientBrush}"/>
                                                </MenuFlyoutItem.Icon>
                                                <MenuFlyoutItem.Text>
                                                    Home
                                                </MenuFlyoutItem.Text>
                                            </MenuFlyoutItem>

                                            <MenuFlyoutSeparator/>

                                            <MenuFlyoutItem x:Name="UndoButton2">
                                                <MenuFlyoutItem.Icon>
                                                    <SymbolIcon Symbol="Undo" Foreground="{StaticResource AppBlueLinearGradientBrush}"/>
                                                </MenuFlyoutItem.Icon>
                                                <MenuFlyoutItem.Text>
                                                    Undo
                                                </MenuFlyoutItem.Text>
                                            </MenuFlyoutItem>

                                            <MenuFlyoutItem x:Name="RedoButton2">
                                                <MenuFlyoutItem.Icon>
                                                    <SymbolIcon Symbol="Redo" Foreground="{StaticResource AppBlueLinearGradientBrush}"/>
                                                </MenuFlyoutItem.Icon>
                                                <MenuFlyoutItem.Text>
                                                    Redo
                                                </MenuFlyoutItem.Text>
                                            </MenuFlyoutItem>

                                            <MenuFlyoutSeparator/>

                                            <MenuFlyoutItem x:Name="SaveButton2">
                                                <MenuFlyoutItem.Icon>
                                                    <SymbolIcon Symbol="Save" Foreground="{StaticResource AppBlueLinearGradientBrush}"/>
                                                </MenuFlyoutItem.Icon>
                                                <MenuFlyoutItem.Text>
                                                    Save
                                                </MenuFlyoutItem.Text>
                                            </MenuFlyoutItem>

                                            <MenuFlyoutSeparator/>

                                            <MenuFlyoutItem x:Name="KeyButton2">
                                                <MenuFlyoutItem.Icon>
                                                    <SymbolIcon Symbol="Keyboard" Foreground="{StaticResource AppBlueLinearGradientBrush}"/>
                                                </MenuFlyoutItem.Icon>
                                                <MenuFlyoutItem.Text>
                                                    Key
                                                </MenuFlyoutItem.Text>
                                            </MenuFlyoutItem>

                                        </MenuFlyout>
                                    </Button.Flyout>
                                    <SymbolIcon Symbol="ViewAll"/>
                                </Button>
                                <Button x:Name="ExportButton" Foreground="Black" Background="#FFC003" Style="{StaticResource AppTextBlockButtonStyle}" >
                                    <SymbolIcon Symbol="NewWindow"/>
                                </Button>
                                <Button x:Name="LayerButton" Style="{StaticResource AppButtonStyle}" >
                                    <FontIcon Glyph="&#xE81E;" FontFamily="Segoe MDL2 Assets"/>
                                </Button>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                                <Button x:Name="UnFullScreenButton" Visibility="Collapsed" MinWidth="44" Background="{ThemeResource AppBackgroundDark}" Style="{StaticResource AppTextBlockButtonStyle}">
                                    <SymbolIcon Symbol="BackToWindow" />
                                </Button>
                                <Button x:Name="FullScreenButton" MinWidth="44" Background="{ThemeResource AppBackgroundDark}" Style="{StaticResource AppTextBlockButtonStyle}">
                                    <SymbolIcon Symbol="FullScreen" />
                                </Button>
                                <Button x:Name="PaletteButton" Style="{StaticResource AppButtonStyle}" >
                                    <FontIcon Glyph="&#xE790;" FontFamily="Segoe MDL2 Assets"/>
                                </Button>
                                <Button                               
                                    x:Name="ColorButton"                               
                                    BorderThickness="0,0,0,2"                                
                                    BorderBrush="DodgerBlue"
                                    Style="{StaticResource AppButtonStyle}"
                                    ManipulationStarted="{x:Bind ColorMenu.ManipulationStarted2}"
                                    ManipulationDelta="{x:Bind ColorMenu.ManipulationDelta2}"
                                    ManipulationCompleted="{x:Bind ColorMenu.ManipulationCompleted2}"
                                    >
                                    <UIElement.ManipulationMode>
                                        TranslateX, TranslateY
                                    </UIElement.ManipulationMode>
                                    <Grid>
                                        <FontIcon Glyph="&#xE91F;" FontSize="32" FontFamily="Segoe MDL2 Assets" />
                                        <Ellipse Width="30" Height="30" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="White" />
                                        <Ellipse Width="30" Height="30" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{x:Bind ColorMenu.Foreground}" />
                                    </Grid>
                                </Button>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
                                <Button x:Name="EditButton" Style="{StaticResource AppButtonStyle}" >
                                    <local:ElementIcon Type="Edit"/>
                                </Button>
                                <Button x:Name="AdjustmentButton" Style="{StaticResource AppButtonStyle}" >
                                    <local:ElementIcon Type="Adjustment"/>
                                </Button>
                                <Button x:Name="OtherButton" Style="{StaticResource AppButtonStyle}" >
                                    <SymbolIcon Symbol="More"/>
                                </Button>
                            </StackPanel>

                        </Grid>
                    </Border>

                </Grid>
            </SplitView>
        </SplitView>


        <!--Foot-->
        <controls:ContextAppBar x:Name="AppBar" Grid.Column="1" />


        <!--Expander-->
        <Rectangle x:Name="LightDismissOverlay" Visibility="Collapsed" Fill="Transparent"/>
        <elements:ExpanderLightDismissOverlay x:Name="ExpanderLightDismissOverlay" >
            <controls:EditMenu x:Name="EditMenu" />
            <controls:AdjustmentMenu x:Name="AdjustmentMenu" />
            <controls:OtherMenu x:Name="OtherMenu" />
            <controls:LayerMenu x:Name="LayerMenu"/>
            <controls:ColorMenu x:Name="ColorMenu" Eyedropper="{x:Bind Eyedropper}" ClickEyedropper="{x:Bind ClickEyedropper}" />
            <controls:PaletteMenu x:Name="PaletteMenu" />
        </elements:ExpanderLightDismissOverlay>


        <!--Dialog-->
        <controls:ExportDialog x:Name="ExportDialog" />
        <controls:TextureDialog x:Name="TextureDialog" />
        <controls:StretchDialog x:Name="StretchDialog" />
        <controls:ExtendDialog x:Name="ExtendDialog" />
        <controls:OffsetDialog x:Name="OffsetDialog" />


        <!--Tip-->
        <controls:ToastTip x:Name="ToastTip" Visibility="Collapsed" IsHitTestVisible="False" />
        <controls:KeyboardShortcuts x:Name="KeyboardShortcuts" Visibility="Collapsed" />
        <Border IsHitTestVisible="False" CornerRadius="6" Padding="12,3" MinHeight="40" Background="Red" RequestedTheme="Dark" HorizontalAlignment="Center" VerticalAlignment="Center"
                Visibility="{x:Bind ReverseBooleanToVisibilityConverter(AppBar.Selector.IsHitTestVisible), Mode=OneWay}">
            <StackPanel Orientation="Horizontal">
                <SymbolIcon Symbol="Delete"/>
                <ContentControl Width="12"/>
                <TextBlock x:Name="GradientMappingTipTextBlock" FontWeight="Medium" VerticalAlignment="Center">
                    Drop to Remove
                </TextBlock>
            </StackPanel>
        </Border>


        <elements:Eyedropper x:Name="Eyedropper" Visibility="Collapsed"/>
        <elements:ClickEyedropper x:Name="ClickEyedropper" Visibility="Collapsed"/>

    </Grid>
</Page>